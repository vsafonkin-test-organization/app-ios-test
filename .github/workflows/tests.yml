name: Tests

on:
  pull_request:
  # Run this workflow on pull_requests that target the following branches
    branches: [ main ]

jobs:
   ## Create a build that can be used for testing ##
   build:
    runs-on: macos-11
    steps:
    # Fetch files
    - uses: actions/checkout@v2

    # Install prerequisites for build
    # Mint does not come pre-installed. See: 'Set up job' - 'Virtual Environment' - link to 'Included Software'
    - name: Install Mint
      run: brew install mint
      shell: bash

    - name: Install packages from Mint
      run: mint bootstrap
      shell: bash

    # Build
    - name: Select Xcode
      run: sudo xcode-select -switch /Applications/Xcode_13.0.app && /usr/bin/xcodebuild -version

    - name: Build for testing
      run: xcodebuild clean build-for-testing -workspace 'Restocks.xcworkspace' -scheme 'CI_iOS' -derivedDataPath 'derivedData' -destination 'platform=iOS Simulator,name=iPhone 12 mini,OS=15.0' | xcpretty && exit ${PIPESTATUS[0]}

    # Upload files for tests job
    - name: Upload build
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: derivedData/Build/Products/


   ## Run unit tests ##
   unit_tests:
    needs: build
    runs-on: macos-11
    steps:
    # Fetch files for testing
    - uses: actions/checkout@v2

    - name: Download xctestrun
      uses: actions/download-artifact@v2
      with:
        name: build
        path: derivedData/Build/Products/

    # Testing
    - name: Select Xcode
      run: sudo xcode-select -switch /Applications/Xcode_13.0.app && /usr/bin/xcodebuild -version

    - name: Run unit tests
      run: xcodebuild test-without-building -xctestrun $(find . -type f -name "*.xctestrun") -derivedDataPath 'derivedData' -destination 'platform=iOS Simulator,name=iPhone 12 mini,OS=15.0' -skip-testing:RestocksiOSSnapshotTests | xcpretty && exit ${PIPESTATUS[0]}
    # XCTestrun file resides in derivedData/Build/Products/


   ## Run snapshot tests ##
   snapshot_tests:
    needs: unit_tests # We could make this a parallel job next to unit_tests, but because we want to save 'github runner minutes' in case a step fails, we run it after.
    runs-on: macos-11
    steps:
    # Fetch files for testing
    - uses: actions/checkout@v2

    - name: Download xctestrun
      uses: actions/download-artifact@v2
      with:
        name: build
        path: derivedData/Build/Products/

    # Testing
    - name: Select Xcode
      run: sudo xcode-select -switch /Applications/Xcode_13.0.app && /usr/bin/xcodebuild -version

    - name: Run snapshot tests
      run: xcodebuild test-without-building -xctestrun $(find . -type f -name "*.xctestrun") -derivedDataPath 'derivedData' -destination 'platform=iOS Simulator,name=iPhone 12 mini,OS=15.0' -only-testing:RestocksiOSSnapshotTests | xcpretty && exit ${PIPESTATUS[0]}
    # XCTestrun file resides in derivedData/Build/Products/
